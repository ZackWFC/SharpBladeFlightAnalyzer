<UserControl x:Class="SharpBladeFlightAnalyzer.LogPageControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:d3="clr-namespace:InteractiveDataDisplay.WPF;assembly=InteractiveDataDisplay.WPF"
             xmlns:local="clr-namespace:SharpBladeFlightAnalyzer"
             mc:Ignorable="d" 
             d:DesignHeight="670" d:DesignWidth="990" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <local:ColorBrushConvert x:Key="color2brush"/>
        <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="Black"></Setter>
            <Setter Property="Background" Value="LightGray"></Setter>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{TemplateBinding Background}"></Ellipse>
                            <Path x:Name="cross" Data="M9,1 1,9 M1,1 9,9" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="Red"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="Gray"></Setter>
                                <Setter  Property="Foreground" Value="White"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#3FBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#3F3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="20">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </UserControl.Resources>
    <Grid>
        <TabControl TabStripPlacement="Bottom">
            <TabItem Header="数据" Width="100" Height="30">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200" MinWidth="200" MaxWidth="500"/>
                        <ColumnDefinition Width="3"/>
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="3"/>
                        <ColumnDefinition Width="1*" MinWidth="100" MaxWidth="300"/>
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*" MinHeight="100"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="3"/>
                            <RowDefinition Height="1*" MinHeight="100"/>
                        </Grid.RowDefinitions>
                        <ListView x:Name="polarListView" Margin="1,1,0,0" SelectionChanged="polarListView_SelectionChanged">
                            <ListView.View>
                                <GridView >
                                    <GridView.Columns>
                                        <GridViewColumn  Width="30">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding Visible}"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn  Width="25">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Rectangle Width="10" Height="10" Fill="{Binding Color,Converter={StaticResource color2brush}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="名称" Width="150" DisplayMemberBinding="{Binding Name}"/>
                                        <!--<GridViewColumn Header="Name" Width="160">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Name}"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>-->
                                    </GridView.Columns>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Button x:Name="addFieldBtn" Grid.Row="1" Content="添加" Click="addFieldBtn_Click" Margin="5" ToolTip="添加一条曲线"/>
                        <GridSplitter  Grid.Row="2" Height="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="LightGray"/>
                        <Grid x:Name="polarGrid" Grid.Row="3" Background="#FFF0F0F0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="1*" MinWidth="100"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Text="名称" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Name}" BorderThickness="1" Margin="5" VerticalAlignment="Center"/>
                            <TextBlock Grid.Row="1" Text="偏移" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding YOffset}" BorderThickness="1" Margin="5" VerticalAlignment="Center"/>
                            <TextBlock Grid.Row="2" Text="缩放" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Scale}" BorderThickness="1" Margin="5" VerticalAlignment="Center"/>
                            <TextBlock Grid.Row="3" Text="延迟" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding XOffset}" BorderThickness="1" Margin="5" VerticalAlignment="Center"/>
                            <TextBlock Grid.Row="4" Text="低通滤波" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding Lpf}" BorderThickness="1" Margin="5" VerticalAlignment="Center"/>
                            <TextBlock Grid.Row="5" Text="颜色" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            <Button x:Name="colorBtn" Grid.Row="5" Grid.Column="1" Margin="5,7" Background="{Binding Color,Converter={StaticResource color2brush}}" Click="colorBtn_Click"/>
                            <Button x:Name="removeFieldBtn" Content="移除" Grid.Row="6" Grid.ColumnSpan="2" Margin="10,5" Click="removeFieldBtn_Click" />
                            <Button x:Name="exportFieldBtn" Content="导出曲线数据" Grid.Row="7" Grid.ColumnSpan="2" Margin="10,5" Click="exportFieldBtn_Click" ToolTip="将选中曲线的原始数据和处理后数据保存到文件"/>
                            <Button x:Name="exportGraphBtn" Content="导出图像数据" Grid.Row="8" Grid.ColumnSpan="2" Margin="10,5" Click="exportGraphBtn_Click" ToolTip="将图像上所有处理后的曲线数据保存到文件"/>
                        </Grid>
                    </Grid>
                    <GridSplitter x:Name="gridSplitter" Grid.Column="1" Width="3" HorizontalAlignment="Center" Background="LightGray"/>
                    <Border Grid.Column="2">
                        <d3:Chart x:Name="mainChart" IsAutoFitEnabled="True" Margin="0,5,5,0" LayoutUpdated="mainChart_LayoutUpdated" LegendVisibility="Hidden">
                            <Grid x:Name="Lines"/>
                        </d3:Chart>
                    </Border>
                    <GridSplitter Grid.Column="3" Width="3" HorizontalAlignment="Center" Background="LightGray"/>
                    <ListView x:Name="graphList" Grid.Column="4" HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionChanged="graphList_SelectionChanged" >
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.Resources>
                            <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
                            <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
                            <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
                            <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
                            <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
                            <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="Padding" Value="4,1"/>
                                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                                </MultiTrigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <DataTemplate DataType="{x:Type local:Graph}">
                                <Grid>
                                    <Border  BorderBrush="Black" BorderThickness="1"/>
                                    <Image Source="{Binding Thumb}" Margin="5"/>
                                    <Button x:Name="closeGraphBtn" Style="{DynamicResource CloseButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Width="20" Height="20" IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListViewItem},Path=IsSelected}" Click="closeGraphBtn_Click"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type local:BlankGraph}">
                                <Viewbox Stretch="Fill">
                                    <Canvas Width="400" Height="300">
                                        <Border BorderBrush="Black" BorderThickness="2" Width="400" Height="300"/>
                                        <Rectangle  Grid.Column="1" Grid.Row="1" Canvas.Left="100" Canvas.Top="50" Stroke="Gray" StrokeThickness="10" StrokeDashArray="3 1.55" RadiusX="20" RadiusY="20" Width="200" Height="200"/>
                                        <Path Grid.Column="1" Grid.Row="1" Canvas.Left="100" Canvas.Top="50" Data="M100,60 100,140 M60,100 140,100" Stroke="Gray" StrokeThickness="10"/>
                                        <Button x:Name="newGraphBtn" Canvas.Left="100" Canvas.Top="50"  Grid.Column="1" Grid.Row="1" Background="Transparent" BorderBrush="Transparent" Foreground="Transparent" Style="{DynamicResource ButtonStyle1}" Width="200" Height="200" Click="newGraphBtn_Click"/>
                                    </Canvas>
                                </Viewbox>
                            </DataTemplate>
                        </ListBox.Resources>                        
                    </ListView>
                </Grid>
            </TabItem>
            <TabItem Header="参数" Width="100" Height="30" >
                <ListView x:Name="paramList" ItemsSource="{Binding}">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="参数" Width="150" DisplayMemberBinding="{Binding Item1}"/>
                            <GridViewColumn Header="值" Width="150" DisplayMemberBinding="{Binding Item2}"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>
            <TabItem Header="消息" Width="100" Height="30">
                <ListView x:Name="msgList" ItemsSource="{Binding}">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="等级" Width="150" DisplayMemberBinding="{Binding Level}"/>
                            <GridViewColumn Header="时间" Width="150" DisplayMemberBinding="{Binding Time,StringFormat={}{0:HH:mm:ss.fff}}"/>
                            <GridViewColumn Header="消息" Width="400" DisplayMemberBinding="{Binding Message}"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>
            <TabItem Header="属性" Width="100" Height="30">
                <ListView x:Name="propList" ItemsSource="{Binding}">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="属性" Width="150" DisplayMemberBinding="{Binding Item1}"/>
                            <GridViewColumn Header="值" Width="450" DisplayMemberBinding="{Binding Item2}"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>
            <TabItem Header="导出" Width="100" Height="30">
                <TabControl TabStripPlacement="Left">
                    <TabItem Header="Tacview" Width="100" Height="30">
                        <Button x:Name="exportAcmiBtn" Content="导出acmi" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Height="30" Click="exportAcmiBtn_Click"/>
                    </TabItem>
                </TabControl>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
